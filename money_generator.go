//go:build ignore

package main

import (
	"os"
	"text/template"

	"github.com/BurntSushi/toml"
)

type Config struct {
	Money struct {
		Currency string `toml:"currency"`
	} `toml:"money"`
}

func main() {
	var config Config
	if _, err := toml.DecodeFile("config.toml", &config); err != nil {
		panic(err)
	}

	tmpl := template.Must(template.New("money").Parse(`
// Code generated by go generate; DO NOT EDIT.
package forex 

// NewMoney creates a new Money instance with the given amount and currency.
// The amount should be specified in the currency's smallest sub-unit 
// (e.g., cents for USD, pence for GBP). For example:
// USD 10.50 should be passed as 1050
// EUR 5.99 should be passed as 599
func NewMoney(amount int64) *Money[{{.Money.Currency}}] {
    return &Money[{{.Money.Currency}}]{
        amount: amount,
    }
}
`))

	f, err := os.Create("forex/money_gen.go")
	if err != nil {
		panic(err)
	}
	defer f.Close()

	if err := tmpl.Execute(f, config); err != nil {
		panic(err)
	}
}
